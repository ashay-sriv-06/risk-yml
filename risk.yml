# To this (fixes the error):
resource "aws_iam_role_policy" "test_policy" {
  for_each = var.iam_role_policy_json != "" ? { "policy" = var.iam_role_policy_json } : {}
  
  name   = "${var.iam_role_name}-policy"
  role   = aws_iam_role.this.id
  policy = each.value
}
---
- name: Install Netwrix Agent
  hosts: platform_Windows
  gather_facts: false
  tasks:
    - name: Copy Netwrix installer
      win_copy:
        src: "{{ playbook_dir }}/../Files/NetwrixAgent"
        dest: C:\ansible\
    
    - name: Check for Netwrix Service
      win_service:
        name: Netwrix Agent
      register: result
      failed_when: result is not defined
      ignore_errors: true
    
    - name: Install Netwrix
      win_shell: Netwrix-agent install --server=https://netwrix-server.domain.com -- token = "# Need to add installation token"
      args:
        chdir: C:\ansible\NetwrixAgent
        executable: cmd
      when: result is failed
    
    - name: Verify Netwrix Agent Service
      win_service:
        name: Netwrix Agent
        state: started
      register: service_status
    
    - name: Copy UACorsSvcSetup installer
      win_copy:
        src: "{{ playbook_dir }}/../Files/UACorsSvcSetup.msi"
        dest: C:\ansible\
    
    - name: Install UACorsSvcSetup
      win_package:
        path: C:\ansible\UACorsSvcSetup.msi
        state: present
        arguments: /quiet /norestart
        product_id: auto
      register: uacors_install
    
    - name: Copy Netwrix WSA Compression Service installer
      win_copy:
        src: "{{ playbook_dir }}/../Files/Netwrix.WSA.CompressionService.Setup.msi"
        dest: C:\ansible\
    
    - name: Install Netwrix WSA Compression Service
      win_package:
        path: C:\ansible\Netwrix.WSA.CompressionService.Setup.msi
        state: present
        arguments: /quiet /norestart
        product_id: auto
      register: compression_service_install
    
    - name: Verify UACorsSvc Service
      win_service:
        name: UACorsSvc
        state: started
      register: uacors_service_status
      ignore_errors: true
    
    - name: Verify Netwrix WSA Compression Service
      win_service:
        name: NetwrixWSACompressionService
        state: started
      register: compression_service_status
      ignore_errors: true
    
    - name: Display installation status
      debug:
        msg: "Netwrix Agent installation completed. Service Status: {{ service_status.state }}"
        
    - name: Display UACorsSvc installation status
      debug:
        msg: "UACorsSvc installation completed. Service Status: {{ uacors_service_status.state | default('Service not found') }}"
      when: uacors_install is succeeded
    
    - name: Display Compression Service installation status
      debug:
        msg: "Netwrix WSA Compression Service installation completed. Service Status: {{ compression_service_status.state | default('Service not found') }}"
      when: compression_service_install is succeeded
